<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.board.boardproject.mappers.ReplyMapper">

  <!-- list -->
  <select id="getList" resultType="ReplyDTO">
    select if(rno = gno, 0, 1) as step, rno, bno, reply, replyer,
        replyDate, gno
    from tbl_reply
    where bno = #{bno} and rno > 0
    order by gno asc, rno asc
    limit #{pr.skip}, #{pr.size}
  </select>

  <!-- total -->
  <select id="getBnoCount" resultType="int">
    select count(rno) from tbl_reply where bno = #{bno}
  </select>

  <!-- register 댓글 -->
  <insert id="registerReply">
    insert into tbl_reply (bno, reply, replyer)
    values (#{bno}, #{reply}, #{replyer})
      <!-- 마지막 rno -->
      <selectKey resultType="int" keyProperty="rno" order="AFTER">
        select last_insert_id()
      </selectKey>
  </insert>

  <!-- register 댓글 gno에 rno대입 -->
  <update id="updateReplyGno">
    update tbl_reply set gno = #{rno} where rno = #{rno}
  </update>
  <!-- //register 댓글 -->

  <!-- register 대댓글 -->
  <insert id="registerReplyChild">
    insert into tbl_reply (bno, reply, replyer, gno)
    values (#{bno}, #{reply}, #{replyer}, #{gno})
      <!-- 마지막 rno -->
      <selectKey resultType="int" keyProperty="rno" order="AFTER">
        select last_insert_id()
      </selectKey>
  </insert>

  <!-- read 댓글 -->
  <select id="readOne">
    select rno, bno, reply, replyer, status
    from tbl_reply
    where rno = #{rno}
  </select>

  <!-- delete 댓글 -->
  <update id="delete">
    update tbl_reply
      set
    reply = '삭제된 댓글 입니다', replyDate = now(), status = false
    where rno = #{rno}
  </update>

  <!-- modify 댓글 -->
  <update id="modify">
    update tbl_reply
    set
      reply = #{reply}, replyDate = now()
    where rno = #{rno}
  </update>

</mapper>